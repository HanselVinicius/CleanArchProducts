version: '3.8'

services:
  prodocts-api:
    build:
        context: .
        dockerfile: Dockerfile
    ports:
        - "8080:8080"
    depends_on:
      - redis
      - db
      - kafka

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka-net
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka-net
    depends_on:
        - zookeeper
    restart: always
    ports:
      - "9092:9092"
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        command: "bash -c 'docker exec broker sh -c \"sleep 5 && kafka-topics --bootstrap-server broker:9092 --create --topic buy-product --replication-factor 1 --partitions 1\"'"


  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
        - kafka-net
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_USER: vinicius
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql


networks:
    kafka-net:
        driver: bridge
